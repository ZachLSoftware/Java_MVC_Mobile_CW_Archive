{
	"info": {
		"_postman_id": "76573c72-8cb2-49c2-bf27-dd45ce5809e8",
		"name": "part1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "endpoint_1_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_2_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var id = responseJson.replyMessage.slice(-2);\r",
							"if (id.includes('/'))\r",
							"{\r",
							"     id=id.slice(-1)\r",
							"}\r",
							"pm.collectionVariables.set(\"Test_Convenor\", id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Richard Craggs\",\r\n    \"position\": \"PROFESSOR\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/convenors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_2_fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 3,\r\n    \"name\": \"Roy Crole\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/convenors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_3_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_3_fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/200",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"200"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_4_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Position has been updated.\", function(){\r",
							"    pm.expect(responseJson.position).to.be.a(\"string\",\"LECTURER\")\r",
							"});\r",
							"\r",
							"pm.test(\"Modules have been overwritten\", function(){\r",
							"    pm.expect(responseJson.modules).to.be.a(\"array\");\r",
							"    pm.expect(responseJson.modules).to.be.empty;\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Richy Rich\",\r\n    \"position\": \"LECTURER\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/convenors/{{Test_Convenor}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"{{Test_Convenor}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_4_fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Jose Rojas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/convenors/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_5_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/{{Test_Convenor}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"{{Test_Convenor}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_5_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/250",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"250"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_6_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/4/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"4",
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_6_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors/250/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors",
						"250",
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_7_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_8_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var id = responseJson.replyMessage.slice(-6);\r",
							"if (id.includes('/'))\r",
							"{\r",
							"    id=id.slice(id.indexOf('/')+1)\r",
							"}\r",
							"pm.collectionVariables.set(\"Test_Module\", id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"code\": \"CO2104\",\r\n    \"title\": \"UI Design\",\r\n    \"level\": 2,\r\n    \"optional\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_8_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.response.to.have.status(409);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"code\": \"CO2103\",\r\n    \"title\": \"Software\",\r\n    \"level\": 2,\r\n    \"optional\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		},
		{
			"name": "enpoint_9_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/{{Test_Module}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"{{Test_Module}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_9_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO1234",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO1234"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_10_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Field Updated Successfully\", function(){\r",
							"    pm.expect(responseJson.title).to.be.a(\"string\",\"API Updated\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"API Updated\",\r\n    \"optional\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/{{Test_Module}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"{{Test_Module}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "enpoint_10_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Failed Patch\",\r\n    \"optional\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO1234",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO1234"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_11_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/{{Test_Module}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"{{Test_Module}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_11_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO1234",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO1234"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_12_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_12_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO1234/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO1234",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_13_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var id = responseJson.replyMessage.slice(-2);\r",
							"if (id.includes('/'))\r",
							"{\r",
							"    id=id.slice(-1);\r",
							"}\r",
							"pm.collectionVariables.set(\"Test_Session\", id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio\",\r\n    \"datetime\": \"2022-03-21T14:30:00.000+00:00\",\r\n    \"duration\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_13_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"topic\": \"Android Studio\",\r\n    \"datetime\": \"2022-03-21T14:30:00.000+00:00\",\r\n    \"duration\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/module/CO2103/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"module",
						"CO2103",
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_14_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"sessionBody\", responseJson);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/{{Test_Session}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"{{Test_Session}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_14_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/224",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"224"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_15_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Topic has been updated.\", function(){\r",
							"    pm.expect(responseJson.topic).to.not.eq(pm.collectionVariables.get(\"sessionBody\").topic);\r",
							"    pm.expect(responseJson.topic).to.eql(\"Android Studio PUT UPDATE\");\r",
							"});\r",
							"\r",
							"pm.test(\"Time has been updated.\", function(){\r",
							"    pm.expect(responseJson.datetime).to.not.eq(pm.collectionVariables.get(\"sessionBody\").datetime);\r",
							"    pm.expect(responseJson.datetime).to.eql(\"2022-03-21T09:30:00.000+00:00\");\r",
							"});\r",
							"\r",
							"pm.test(\"Duration has been updated.\", function(){\r",
							"        pm.expect(responseJson.duration).to.not.eql(pm.collectionVariables.get(\"sessionBody\").duration);\r",
							"    pm.expect(responseJson.duration).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"sessionBody\", responseJson);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio PUT UPDATE\",\r\n    \"datetime\": \"2022-03-21T09:30:00.000+00:00\",\r\n    \"duration\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/{{Test_Session}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"{{Test_Session}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_15_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio PUT FAILURE\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/{{Test_Session}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"{{Test_Session}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_16_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Topic has been updated.\", function(){\r",
							"    pm.expect(responseJson.topic).to.not.eql(pm.collectionVariables.get(\"sessionBody\").topic)\r",
							"    pm.expect(responseJson.topic).to.eql(\"Android Studio PATCH UPDATE\")\r",
							"});\r",
							"\r",
							"pm.test(\"Time has not changed.\", function(){\r",
							"    pm.expect(responseJson.datetime).to.eql(pm.collectionVariables.get(\"sessionBody\").datetime);\r",
							"});\r",
							"\r",
							"pm.test(\"Duration has been updated.\", function(){\r",
							"        pm.expect(responseJson.duration).to.not.eql(pm.collectionVariables.get(\"sessionBody\").duration);\r",
							"    pm.expect(responseJson.duration).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio PATCH UPDATE\",\r\n    \"duration\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/{{Test_Session}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"{{Test_Session}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_16_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio PATCH UPDATE\",\r\n    \"duration\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/300",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"300"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_17_success",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/{{Test_Session}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"{{Test_Session}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_17_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 400, cannot delete from module\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"topic\": \"Android Studio PATCH UPDATE\",\r\n    \"duration\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/modules/CO2103/sessions/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules",
						"CO2103",
						"sessions",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_19_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200, convenor filter success\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?convenor=4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": "convenor",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_19_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204, convenor has no sessions\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?convenor=5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": "convenor",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_20_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?&module=CO3095",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": null,
							"value": null
						},
						{
							"key": "module",
							"value": "CO3095"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_20_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 404, Module doesn't exist\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?module=CO3333",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": "module",
							"value": "CO3333"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_19_20_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, both filters success\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?convenor=4&module=CO3095",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": "convenor",
							"value": "4"
						},
						{
							"key": "module",
							"value": "CO3095"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_19_20_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"tests[\"Response Body \", JSON.stringify(responseJson)] = true;\r",
							"pm.test(\"Status code is 400, Convenor doesn't teach module.\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions?convenor=3&module=CO3095",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					],
					"query": [
						{
							"key": "convenor",
							"value": "3"
						},
						{
							"key": "module",
							"value": "CO3095"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_18_success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200, All Sessions Deleted\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_18_failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204, No sessions Found\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"sessions"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_1_failure",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(\"http://localhost:8080/convenors\", function (err, response) {\r",
							"\r",
							"    if(response.code===200){\r",
							"    const responseJson = response.json();\r",
							"\r",
							"    //Doesn't delete shared module as sendrequest is asynchronous.  Both requests happen at the same time causing the api to think the module is still shared.\r",
							"\r",
							"    for(var i = 0; i<responseJson.length;i++){\r",
							"        pm.sendRequest({url:\"http://localhost:8080/convenors/\"+responseJson[i].id, method: 'DELETE'}, function (err, response) {\r",
							"            console.log(response.json());\r",
							"        });\r",
							"    }\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204, No Convenors Found\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/convenors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"convenors"
					]
				}
			},
			"response": []
		},
		{
			"name": "endpoint_7_failure",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest(\"http://localhost:8080/modules\", function (err, response) {\r",
							"\r",
							"    if(response.code===200){\r",
							"    const responseJson = response.json();\r",
							"\r",
							"        for(var i = 0; i<responseJson.length;i++){\r",
							"            pm.sendRequest({url:\"http://localhost:8080/modules/\"+responseJson[i].code, method: 'DELETE'}, function (err, response) {\r",
							"                console.log(response.json());\r",
							"            });\r",
							"        }\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204, No Modules Found\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/modules",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"modules"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Test_Session",
			"value": ""
		},
		{
			"key": "sessionBody",
			"value": ""
		},
		{
			"key": "Test_Convenor",
			"value": ""
		},
		{
			"key": "Test_Module",
			"value": ""
		}
	]
}